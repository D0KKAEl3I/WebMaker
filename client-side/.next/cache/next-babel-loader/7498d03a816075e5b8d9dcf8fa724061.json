{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\S\\\\Desktop\\\\\\uB07C\\uC694\\uC637\\\\\\uD3EC\\uD3F4\\uAD00\\uB9AC\\uC571\\\\client-side\\\\src\\\\layouts\\\\Index\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction Index() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState([]),\n      items = _useState3[0],\n      setItems = _useState3[1]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n\n  useEffect(function () {\n    fetch(\"http://localhost:8080\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Index, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/S/Desktop/끼요옷/포폴관리앱/client-side/src/layouts/Index/index.js"],"names":["useState","useEffect","Index","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","map","item","name","price","id"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AAAA,kBACaF,QAAQ,CAAC,IAAD,CADrB;AAAA,MACNG,KADM;AAAA,MACCC,QADD;;AAAA,mBAEmBJ,QAAQ,CAAC,KAAD,CAF3B;AAAA,MAENK,QAFM;AAAA,MAEIC,WAFJ;;AAAA,mBAGaN,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGNO,KAHM;AAAA,MAGCC,QAHD,kBAKb;AACA;AACA;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADb,EAEKF,IAFL,CAGQ,UAACG,MAAD,EAAY;AACRP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACH,KANT,EAOQ;AACA;AACA;AACA,cAACV,KAAD,EAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAbT;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA,gBACKE,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,4BACX;AAAA,qBACKA,IAAI,CAACC,IADV,OACiBD,IAAI,CAACE,KADtB;AAAA,WAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA,OAAd;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ;;GAzCQjB,K;;KAAAA,K;AA0CT,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nfunction Index() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <ul>\r\n                {items.map(item => (\r\n                    <li key={item.id}>\r\n                        {item.name} {item.price}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nexport default Index"]},"metadata":{},"sourceType":"module"}